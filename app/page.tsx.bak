"use client";

import { useState, useEffect, Fragment } from "react";
import { useRouter } from "next/navigation";
import Image from "next/image";
import Link from "next/link";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { useStorage } from "@/hooks/useStorage";
import { clientConfig as config } from "@/lejechat.config";
import { DEFAULT_QUICK_PROMPTS } from "@/lib/quick-prompts";
import {
  ArrowRight,
  Settings,
  Loader2,
  CheckCircle2,
  FileText,
  AlertCircle,
  Lock,
  Sparkles,
  MessageSquare,
  Plug
} from "lucide-react";
import { toast } from "sonner";

export default function LejechatPage() {
  const router = useRouter();
  const searchParams = new URLSearchParams(typeof window !== 'undefined' ? window.location.search : '');
  const urlParam = searchParams.get('url');
  const { saveIndex } = useStorage();
  
  const [url, setUrl] = useState(urlParam || 'https://www.lejebolig.dk/');
  const [hasInteracted, setHasInteracted] = useState(false);
  const [loading, setLoading] = useState(false);
  const [urlError, setUrlError] = useState<string | null>(null);
  const pageLimit = config.crawling.defaultLimit;
  const workflowSteps = [
    {
      title: 'Upload udlejningslink',
      description: 'Indsæt URL til din boligportal, så vi kan hente alle relevante annoncesider.'
    },
    {
      title: 'AI bygger chatbotten',
      description: 'Lejechat renser og strukturerer indholdet og opretter en søgbar chatbot på få minutter.'
    },
    {
      title: 'Tilpas chatboksens styling',
      description: 'Juster farver, tone og velkomstbeskeder, så assistenten matcher din visuelle identitet.'
    },
    {
      title: 'Implementér på websitet',
      description: 'Indsæt den lille script-snippet på din boligside og gør chatbotten tilgængelig for besøgende.'
    },
  ];
  const featureHighlights = [
    {
      title: 'Boligdata på autopilot',
      description: 'Crawl op til 100 sider pr. import og få et struktureret katalog på få minutter.',
      icon: FileText,
    },
    {
      title: 'Chat der taler bolig',
      description: 'Lejechat svarer på dansk med referencer til priser, depositum og indflytningsdatoer.',
      icon: MessageSquare,
    },
    {
      title: 'Plug-and-play integration',
      description: 'Del et offentligt link, indlejr chatboksen eller brug vores OpenAI-kompatible API.',
      icon: Plug,
    },
  ];
  const quickFacts = [
    {
      label: 'Standard crawl-grænse',
      value: `${pageLimit} sider pr. import`
    },
    {
      label: 'Svarformat',
      value: 'Dansk som standard med kildehenvisninger'
    },
    {
      label: 'Hosting',
      value: 'Embed-widget og OpenAI-kompatibel endpoint'
    },
  ];
  const [isCreationDisabled, setIsCreationDisabled] = useState<boolean | undefined>(undefined);
  const [crawlProgress, setCrawlProgress] = useState<{
    status: string;
    pagesFound: number;
    pagesScraped: number;
    currentPage?: string;
  } | null>(null);
  const [hasServerFirecrawlKey, setHasServerFirecrawlKey] = useState<boolean | null>(null);
  const [previewSlug, setPreviewSlug] = useState<string | null>(null);

  useEffect(() => {
    // Check server-side configuration and feature flags
    fetch('/api/check-env')
      .then(res => res.json())
      .then(data => {
        setIsCreationDisabled(data.environmentStatus.DISABLE_CHATBOT_CREATION || false);
        const hasEnvFirecrawl = Boolean(data.environmentStatus.FIRECRAWL_API_KEY);
        setHasServerFirecrawlKey(hasEnvFirecrawl);

        if (!hasEnvFirecrawl) {
          toast.error('Firecrawl API-nøgle mangler på serveren. Tilføj den i .env.local.');
        }
      })
      .catch(() => {
        setIsCreationDisabled(false);
        setHasServerFirecrawlKey(null);
      });
  }, []);

  useEffect(() => {
    if (typeof window === 'undefined') return;

    const resolveSlug = () => {
      try {
        const currentData = window.sessionStorage.getItem('lejechat_current_data');
        if (currentData) {
          const parsed = JSON.parse(currentData);
          if (parsed?.slug) return parsed.slug as string;
        }
      } catch {
        // ignore parse errors
      }

      try {
        const storedIndexes = window.localStorage.getItem('lejechat_indexes');
        if (storedIndexes) {
          const indexes = JSON.parse(storedIndexes);
          const first = Array.isArray(indexes) ? indexes[0] : null;
          if (first?.slug) return first.slug as string;
        }
      } catch {
        // ignore parse errors
      }

      if (process.env.NEXT_PUBLIC_DEMO_SLUG) {
        return process.env.NEXT_PUBLIC_DEMO_SLUG;
      }

      return 'lejechat-demo';
    };

    setPreviewSlug(resolveSlug());
  }, []);

  useEffect(() => {
    if (typeof window === 'undefined') return;
    if (!previewSlug) return;

    const scriptId = 'lejechat-landing-embed';
    const existingScript = document.getElementById(scriptId);
    if (existingScript) {
      if (existingScript.getAttribute('data-slug') === previewSlug) {
        return;
      }
      existingScript.remove();
    }

    const cleanupWidget = () => {
      document.getElementById('lejechat-widget-container')?.remove();
      document.getElementById('lejechat-widget-styles')?.remove();
      if (typeof window !== 'undefined') {
        const anyWindow = window as unknown as Record<string, unknown>;
        if ('lejechatWidget' in anyWindow) {
          delete anyWindow.lejechatWidget;
        }
      }
    };

    cleanupWidget();

    const script = document.createElement('script');
    script.id = scriptId;
    script.defer = true;
    script.setAttribute('data-slug', previewSlug);
    script.src = `/embed/lejechat?slug=${encodeURIComponent(previewSlug)}&label=${encodeURIComponent('Spørg Lejechat')}&accent=%23f97316`;
    document.body.appendChild(script);

    return () => {
      script.remove();
      cleanupWidget();
    };
  }, [previewSlug]);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!url) return;

    if (hasServerFirecrawlKey === false) {
      toast.error('Firecrawl API-nøgle mangler på serveren. Tilføj den i .env.local');
      return;
    }

    // Normalize URL
    let normalizedUrl = url.trim();
    if (!normalizedUrl.startsWith('http://') && !normalizedUrl.startsWith('https://')) {
      normalizedUrl = 'https://' + normalizedUrl;
    }
    
    // Validate URL
    try {
      new URL(normalizedUrl);
      setUrlError(null);
    } catch {
      setUrlError('Angiv en gyldig URL til din boligportal');
      toast.error('Angiv en gyldig URL');
      return;
    }

    setLoading(true);
    setCrawlProgress({
      status: 'Starter import...',
      pagesFound: 0,
      pagesScraped: 0
    });
    
    interface CrawlResponse {
      success: boolean
      namespace: string
      slug?: string
      crawlId?: string
      details: {
        url: string
        pagesCrawled: number
      }
      data: Array<{
        url?: string
        metadata?: {
          sourceURL?: string
          title?: string
          ogTitle?: string
          description?: string
          ogDescription?: string
          favicon?: string
          ogImage?: string
          'og:image'?: string
          'twitter:image'?: string
        }
      }>
    }
    
    let data: CrawlResponse | null = null;
    
    try {
      // Simulate progressive updates
      let currentProgress = 0;
      
      const progressInterval = setInterval(() => {
        currentProgress += Math.random() * 3;
        if (currentProgress > pageLimit * 0.8) {
          clearInterval(progressInterval);
        }
        
        setCrawlProgress(prev => {
          if (!prev) return null;
          const scraped = Math.min(Math.floor(currentProgress), pageLimit);
          return {
            ...prev,
            status: scraped < pageLimit * 0.3 ? 'Finder boligannoncer...' : 
                   scraped < pageLimit * 0.7 ? 'Henter indhold...' : 
                   'Afslutter...',
            pagesFound: pageLimit,
            pagesScraped: scraped,
            currentPage: scraped > 0 ? `Behandler side ${scraped} af ${pageLimit}` : undefined
          };
        });
      }, 300);
      
      const headers: Record<string, string> = {
        'Content-Type': 'application/json',
      };
      const response = await fetch('/api/lejechat/create', {
        method: 'POST',
        headers,
        body: JSON.stringify({ url: normalizedUrl, limit: pageLimit })
      });

      data = await response.json();
      
      // Clear the interval
      if (progressInterval) clearInterval(progressInterval);
      
      if (data && data.success) {
        // Update progress to show completion
        setCrawlProgress({
          status: 'Import færdig!',
          pagesFound: data.details?.pagesCrawled || 0,
          pagesScraped: data.details?.pagesCrawled || 0
        });
        
        // Find the homepage in crawled data for metadata
        let homepageMetadata: {
          title?: string
          ogTitle?: string
          description?: string
          ogDescription?: string
          favicon?: string
          ogImage?: string
          'og:image'?: string
          'twitter:image'?: string
        } = {};
        if (data.data && data.data.length > 0) {
          const homepage = data.data.find((page) => {
            const pageUrl = page.metadata?.sourceURL || page.url || '';
            // Check if it's the homepage
            return pageUrl === normalizedUrl || pageUrl === normalizedUrl + '/' || pageUrl === normalizedUrl.replace(/\/$/, '');
          }) || data.data[0]; // Fallback to first page
          
          homepageMetadata = homepage.metadata || {};
        }
        
        // Store the crawl info and redirect to dashboard
        const slug = data.slug || data.namespace;

        const siteInfo = {
          url: normalizedUrl,
          namespace: data.namespace,
          slug,
          crawlId: data.crawlId,
          pagesCrawled: data.details?.pagesCrawled || 0,
          crawlComplete: true,
          crawlDate: new Date().toISOString(),
          metadata: {
            title: homepageMetadata.ogTitle || homepageMetadata.title || new URL(normalizedUrl).hostname,
            description: homepageMetadata.ogDescription || homepageMetadata.description || 'Din bolighjemmeside',
            favicon: homepageMetadata.favicon,
            ogImage: homepageMetadata.ogImage || homepageMetadata['og:image'] || homepageMetadata['twitter:image'],
            quickPrompts: DEFAULT_QUICK_PROMPTS,
          }
        };
        
        // Store only metadata for current session (no crawlData - that's in Upstash)
        sessionStorage.setItem('lejechat_current_data', JSON.stringify(siteInfo));
        
        // Save index metadata using the storage hook
        await saveIndex({
          url: normalizedUrl,
          namespace: data.namespace,
          slug,
          pagesCrawled: data.details?.pagesCrawled || 0,
          createdAt: new Date().toISOString(),
          metadata: {
            title: homepageMetadata.ogTitle || homepageMetadata.title || new URL(normalizedUrl).hostname,
            description: homepageMetadata.ogDescription || homepageMetadata.description || 'Din bolighjemmeside',
            favicon: homepageMetadata.favicon,
            ogImage: homepageMetadata.ogImage || homepageMetadata['og:image'] || homepageMetadata['twitter:image']
          }
        });

        toast.success('Chatbot klar til deling', {
          action: {
            label: 'Åbn chatbot',
            onClick: () => window.open(`/chat/${slug}`, '_blank')
          }
        });
        
        // Small delay to show completion
        setTimeout(() => {
          router.push(`/dashboard?namespace=${siteInfo.namespace}`);
        }, 1000);
        setPreviewSlug(slug);
      } else if (data && 'error' in data) {
        setCrawlProgress({
          status: 'Fejl: ' + (data as { error: string }).error,
          pagesFound: 0,
          pagesScraped: 0
        });
        toast.error((data as { error: string }).error);
      }
    } catch {
      setUrlError('Kunne ikke starte importen – prøv igen om lidt.');
      toast.error('Kunne ikke starte importen. Prøv igen.');
    } finally {
      if (!data?.success) {
        setLoading(false);
        setCrawlProgress(null);
      }
    }
  };

  const header = (
    <header className="border-b border-gray-200 bg-white/80 backdrop-blur">
      <div className="max-w-5xl mx-auto flex items-center justify-between gap-4 px-4 sm:px-6 lg:px-8 py-5">
        <Link href="https://lejechat.dk" target="_blank" rel="noopener noreferrer" className="inline-flex items-center gap-2">
          <Image src="/lejechat-logo.svg" alt="Lejechat" width={120} height={28} className="h-8 w-auto" />
        </Link>
        <Button asChild variant="orange" size="sm" className="font-medium">
          <Link href="/indexes">Se alle chatbots</Link>
        </Button>
      </div>
    </header>
  );

  return (
    <div className="px-4 sm:px-6 lg:px-8 py-4 max-w-7xl mx-auto font-inter">
      <div className="flex justify-between items-center mb-8">
        <Link href="https://lejechat.dk" target="_blank" rel="noopener noreferrer">
          <Image
            src="/lejechat-logo.svg"
            alt="Lejechat Logo"
            width={113}
            height={24}
          />
        </Link>
        <div className="flex items-center">
          <Button
            asChild
            variant="orange"
            className="font-medium"
          >
            <Link href="/indexes">
              Se alle chatbots
            </Link>
          </Button>
        </div>
      </div>

      {isCreationDisabled === undefined ? (
        // Show loading state while checking environment
        <div className="max-w-2xl mx-auto">
          <div className="text-center pt-8 pb-6">
            <h1 className="text-[2.5rem] lg:text-[3.8rem] text-center text-[#36322F] dark:text-zinc-100 font-semibold tracking-tight leading-[1.1] opacity-0 animate-fade-up [animation-duration:500ms] [animation-delay:200ms] [animation-fill-mode:forwards]">
              Lejechat<br />
              <span className="text-[2.5rem] lg:text-[3.8rem] block mt-2 opacity-0 animate-fade-up [animation-duration:500ms] [animation-delay:400ms] [animation-fill-mode:forwards] text-transparent bg-clip-text bg-gradient-to-tr from-red-600 to-yellow-500">
                Indlæser...
              </span>
            </h1>
          </div>
        </div>
      ) : isCreationDisabled === true ? (
        <div className="max-w-2xl mx-auto">
          <div className="text-center pt-8 pb-6">
            <h1 className="text-[2.5rem] lg:text-[3.8rem] text-center text-[#36322F] dark:text-zinc-100 font-semibold tracking-tight leading-[1.1] opacity-0 animate-fade-up [animation-duration:500ms] [animation-delay:200ms] [animation-fill-mode:forwards]">
              Lejechat<br />
              <span className="text-[2.5rem] lg:text-[3.8rem] block mt-2 opacity-0 animate-fade-up [animation-duration:500ms] [animation-delay:400ms] [animation-fill-mode:forwards] text-transparent bg-clip-text bg-gradient-to-tr from-gray-400 to-gray-600">
                Kun læsetilstand
              </span>
            </h1>
          </div>
          
          <div className="bg-orange-50 border border-orange-200 rounded-xl p-8 text-center">
            <Lock className="h-12 w-12 text-orange-600 mx-auto mb-4" />
            <h2 className="text-xl font-semibold text-[#36322F] mb-2">
              Oprettelse af chatbots er deaktiveret
            </h2>
            <p className="text-gray-600 mb-6">
              Administrator har deaktiveret oprettelse af chatbots. Du kan kun se og bruge de nuværende chatbots.
            </p>
            <div className="flex gap-4 justify-center">
              <Button
                asChild
                variant="orange"
                className="font-medium"
              >
                <Link href="/indexes">
                  Se eksisterende chatbots
                </Link>
              </Button>
              <Button
                asChild
                variant="outline"
                className="font-medium"
              >
                <Link href="/">
                  Tilbage til forsiden
                </Link>
              </Button>
            </div>
          </div>
        </div>
      ) : (
        <>
          <div className="text-center pt-8 pb-6">
            <h1 className="text-[2.5rem] lg:text-[3.8rem] text-center text-[#36322F] dark:text-zinc-100 font-semibold tracking-tight leading-[1.1] opacity-0 animate-fade-up [animation-duration:500ms] [animation-delay:200ms] [animation-fill-mode:forwards]">
              Lejechat<br />
              <span className="text-[2.5rem] lg:text-[3.8rem] block mt-2 opacity-0 animate-fade-up [animation-duration:500ms] [animation-delay:400ms] [animation-fill-mode:forwards] text-transparent bg-clip-text bg-gradient-to-tr from-red-600 to-yellow-500">
                Chatbots til dine lejemål.
              </span>
            </h1>
            <p className="max-w-2xl mx-auto mt-6 text-lg text-gray-600">
              Lejechat crawler dine boligportaler, bygger et søgbart videnkartotek og leverer en dansk chatbot,
              der kan svare på spørgsmål om ledighed, priser og indflytningsdatoer på få sekunder.
            </p>
          </div>

          <div className="max-w-2xl mx-auto">
            <form onSubmit={handleSubmit} className="space-y-4">
              <div className="relative">
                <Input
                  type="text"
                  value={url}
                  onChange={(e) => {
                    setUrl(e.target.value);
                    setHasInteracted(true);
                    if (urlError) {
                      setUrlError(null);
                    }
                  }}
                  onFocus={() => {
                    if (!hasInteracted && url === 'https://www.lejebolig.dk/') {
                      setUrl('');
                      setHasInteracted(true);
                    }
                  }}
                  placeholder="https://dinudlejning.dk"
                  className="w-full h-14 px-6 text-lg"
                  required
                  disabled={loading}
                  aria-invalid={urlError ? 'true' : 'false'}
                />
                <Button
                  type="submit"
                  disabled={loading || hasServerFirecrawlKey === false}
                  variant="orange"
                  className="absolute right-2 top-2 h-10"
                >
                  {loading ? (
                    <>
                      <Loader2 className="w-4 h-4 animate-spin mr-2" />
                      Importerer...
                    </>
                  ) : (
                    <>
                      Start import
                      <ArrowRight className="w-4 h-4 ml-2" />
                    </>
                  )}
                </Button>
              </div>
              {urlError && (
                <p className="text-sm text-red-600">{urlError}</p>
              )}
              {hasServerFirecrawlKey === false && (
                <p className="text-sm text-red-600">
                  Tilføj `FIRECRAWL_API_KEY` til `.env.local` og genstart serveren for at aktivere import.
                </p>
              )}
              <p className="text-xs text-gray-500">
                Vi bruger automatisk Firecrawl-nøglen fra `.env.local`, så du skal kun indsætte linket til din boligportal.
              </p>
            </form>

            {/* Loading Progress */}
            {loading && crawlProgress && (
              <div className="mt-8 p-6 bg-[#FBFAF9] rounded-xl border border-gray-200 animate-in fade-in slide-in-from-bottom-4 duration-500">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-lg font-semibold text-[#36322F] flex items-center gap-2">
                    {crawlProgress.status === 'Import færdig!' ? (
                      <CheckCircle2 className="w-5 h-5 text-green-600 animate-in zoom-in duration-300" />
                    ) : crawlProgress.status.includes('Fejl') ? (
                      <AlertCircle className="w-5 h-5 text-red-600 animate-in zoom-in duration-300" />
                    ) : (
                      <Loader2 className="w-5 h-5 text-orange-600 animate-spin" />
                    )}
                    <span className="animate-in fade-in duration-300">{crawlProgress.status}</span>
                  </h3>
                </div>
                
                <div className="space-y-3">
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-gray-600">Opdagede sider</span>
                    <span className="text-[#36322F] font-medium transition-all duration-300">
                      {crawlProgress.pagesFound}
                    </span>
                  </div>
                  
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-gray-600">Importerede sider</span>
                    <span className="text-[#36322F] font-medium transition-all duration-300">
                      {crawlProgress.pagesScraped}
                    </span>
                  </div>
                  
                  {crawlProgress.pagesFound > 0 && (
                    <div className="mt-4">
                      <div className="w-full bg-gray-200 rounded-full h-2">
                        <div 
                          className="bg-gradient-to-r from-orange-500 to-red-600 h-2 rounded-full transition-all duration-500"
                          style={{ width: `${(crawlProgress.pagesScraped / crawlProgress.pagesFound) * 100}%` }}
                        />
                      </div>
                    </div>
                  )}
                  
                  {crawlProgress.currentPage && (
                    <div className="mt-4 p-3 bg-gray-50 rounded-lg">
                      <p className="text-xs text-gray-600 mb-1">Importerer nu:</p>
                      <p className="text-sm text-gray-800 truncate flex items-center gap-2">
                        <FileText className="w-4 h-4 text-gray-500" />
                        {crawlProgress.currentPage}
                      </p>
                    </div>
                  )}
                </div>
              </div>
            )}

            {/* Settings Button */}
            <div className="mt-6 flex flex-col items-center gap-2">
              <Button
                type="button"
                disabled
                variant="outline"
                size="sm"
                className="font-medium opacity-50 cursor-not-allowed"
              >
                <Settings className="w-4 h-4 mr-2" />
                Avancerede indstillinger (deaktiveret)
              </Button>
              <p className="text-xs text-gray-500 text-center">
                Avancerede crawl-indstillinger er på vej – indtil da kører vi med standardopsætning og bruger automatisk nøglen fra `.env.local`.
              </p>
            </div>

            {/* Settings Panel er midlertidigt deaktiveret */}

            <div className="mt-14 rounded-2xl border border-gray-200 bg-white/70 p-8 backdrop-blur-sm">
              <h2 className="text-xl font-semibold text-[#36322F] text-left mb-6">Workflow – fra link til live chat</h2>
              <div className="flex flex-col gap-6 md:flex-row md:items-center md:justify-between">
                {workflowSteps.map((step, index) => (
                  <Fragment key={step.title}>
                    <div className="flex-1 rounded-xl border border-gray-200 bg-[#FBFAF9] px-6 py-5 shadow-sm">
                      <div className="flex items-center gap-3 mb-3">
                        <span className="inline-flex h-9 w-9 items-center justify-center rounded-full bg-orange-100 text-sm font-semibold text-orange-600">
                          {index + 1}
                        </span>
                        <p className="text-base font-semibold text-[#36322F]">{step.title}</p>
                      </div>
                      <p className="text-sm text-gray-600 leading-relaxed">
                        {step.description}
                      </p>
                    </div>
                    {index < workflowSteps.length - 1 && (
                      <>
                        <ArrowRight className="hidden md:block h-6 w-6 text-orange-500" />
                        <ArrowRight className="md:hidden h-6 w-6 rotate-90 self-center text-orange-500" />
                      </>
                    )}
                  </Fragment>
                ))}
              </div>
            </div>

            <div className="mt-14 rounded-2xl border border-gray-200 bg-white/70 p-8 backdrop-blur-sm">
              <h2 className="text-xl font-semibold text-[#36322F] text-left mb-6">Sådan fungerer Lejechat</h2>
              <div className="grid gap-6 md:grid-cols-3">
                <div>
                  <div className="flex items-center gap-3 mb-2">
                    <span className="inline-flex h-8 w-8 items-center justify-center rounded-full bg-orange-100 text-sm font-semibold text-orange-600">1</span>
                    <p className="text-base font-medium text-[#36322F]">Importer dine annoncer</p>
                  </div>
                  <p className="text-sm text-gray-600 leading-relaxed">
                    Indsæt din boligportal, så henter vi automatisk adresser, planløsninger, priser og særlige vilkår.
                  </p>
                </div>
                <div>
                  <div className="flex items-center gap-3 mb-2">
                    <span className="inline-flex h-8 w-8 items-center justify-center rounded-full bg-orange-100 text-sm font-semibold text-orange-600">2</span>
                    <p className="text-base font-medium text-[#36322F]">Berig chatten</p>
                  </div>
                  <p className="text-sm text-gray-600 leading-relaxed">
                    Vi bygger et dansk vidensgrundlag, så assistenten kun svarer ud fra de dokumenter, du har importeret.
                  </p>
                </div>
                <div>
                  <div className="flex items-center gap-3 mb-2">
                    <span className="inline-flex h-8 w-8 items-center justify-center rounded-full bg-orange-100 text-sm font-semibold text-orange-600">3</span>
                    <p className="text-base font-medium text-[#36322F]">Del og integrer</p>
                  </div>
                  <p className="text-sm text-gray-600 leading-relaxed">
                    Brug det indbyggede dashboard eller vores OpenAI-kompatible API til at svare potentielle lejere i realtid.
                  </p>
                </div>
              </div>
            </div>
          </div>
        </>
      )}

    </div>
  );
}
